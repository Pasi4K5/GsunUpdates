root = true

[*]

end_of_line = crlf
insert_final_newline = true
indent_style = space

[*.cs]

# ReSharper properties
resharper_blank_lines_before_block_statements = 1
resharper_braces_redundant = true
resharper_csharp_indent_invocation_pars = inside
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_max_line_length = 200
resharper_csharp_wrap_arguments_style = wrap_if_long
resharper_wrap_arguments_style = wrap_if_long
resharper_csharp_wrap_before_binary_opsign = true
resharper_indent_invocation_pars = inside
resharper_wrap_before_declaration_rpar = false
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_use_heuristics_for_body_style = true

# Microsoft .NET properties
csharp_prefer_braces = true:none

# ReSharper inspection severities
resharper_enforce_do_while_statement_braces_highlighting = warning
resharper_enforce_fixed_statement_braces_highlighting = warning
resharper_enforce_foreach_statement_braces_highlighting = warning
resharper_enforce_for_statement_braces_highlighting = warning
resharper_enforce_if_statement_braces_highlighting = warning
resharper_enforce_lock_statement_braces_highlighting = warning
resharper_enforce_using_statement_braces_highlighting = warning
resharper_enforce_while_statement_braces_highlighting = warning

##############
# Formatting #
##############

max_line_length = 120

dotnet_diagnostic.ide0055.severity = warning

csharp_preserve_single_line_blocks = true

# Indentation

indent_size = 4

# Spaces

csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_square_brackets = false

trim_trailing_whitespace = true

######################
# Naming conventions #
######################

# Style definitions

dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.camel_case_with_underscore.capitalization = camel_case
dotnet_naming_style.camel_case_with_underscore.required_prefix = _

# Types: PascalCase

dotnet_naming_symbols.types.applicable_kinds = class,struct,interface,enum,record,delegate

dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.severity = warning

# Public members: PascalCase

dotnet_naming_symbols.public_members.applicable_kinds = property,method,field,event
dotnet_naming_symbols.public_members.applicable_accessibilities = public,internal,protected,protected_internal,private_protected

dotnet_naming_rule.public_members_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.public_members_should_be_pascal_case.symbols = public_members
dotnet_naming_rule.public_members_should_be_pascal_case.severity = warning

# Private fields: _camelCaseWithUnderscore

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_rule.private_fields_should_be_camel_case_with_underscore.style = camel_case_with_underscore
dotnet_naming_rule.private_fields_should_be_camel_case_with_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_should_be_camel_case_with_underscore.severity = warning

# Constant fields: PascalCase

dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_symbols.constants.applicable_kinds = field

dotnet_naming_rule.constants_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning

# Local symbols: camelCase

dotnet_naming_symbols.local_symbols.applicable_kinds = local

dotnet_naming_rule.local_symbols_should_be_camel_case.style = camel_case
dotnet_naming_rule.local_symbols_should_be_camel_case.symbols = local_symbols
dotnet_naming_rule.local_symbols_should_be_camel_case.severity = warning

# Parameters: camelCase

dotnet_naming_symbols.parameters.applicable_kinds = parameter

dotnet_naming_rule.parameters_should_be_camel_case.style = camel_case
dotnet_naming_rule.parameters_should_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_should_be_camel_case.severity = warning

# Type parameters: PascalCase

dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter

dotnet_naming_rule.type_parameters_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.type_parameters_should_be_pascal_case.symbols = type_parameters
dotnet_naming_rule.type_parameters_should_be_pascal_case.severity = warning

# Local functions: PascalCase

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_rule.local_functions_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = type_parameters
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning

##############
# Code style #
##############

csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

dotnet_style_parentheses_in_arithmetic_binary_operators = false

dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

# Prefer var over explicit type

csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Prefer implicit object creation over var

csharp_style_implicit_object_creation_when_type_is_apparent = true:warning

# Expressions

csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_local_functions = false:warning

# this. qualification

dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Type names

dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# Using directives

csharp_using_directive_placement = outside_namespace
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
